**Query #1**

    select 
    customer_id,sum(sales.product_id * price) 
    from dannys_diner.sales 
    join dannys_diner.menu on 
    menu.product_id = sales.product_id
    
    group by customer_id
    
    order by customer_id asc
    ;

| customer_id | sum |
| ----------- | --- |
| A           | 178 |
| B           | 152 |
| C           | 108 |

---
**Query #2**

    select customer_id,count(distinct(order_date)) as "number of days"
    from dannys_diner.sales
    group by customer_id
    order by "number of days" desc
    
    ;

| customer_id | number of days |
| ----------- | -------------- |
| B           | 6              |
| A           | 4              |
| C           | 2              |

---
**Query #3**

    select distinct on (customer_id) customer_id ,product_name , order_date
    from dannys_diner.sales 
    join dannys_diner.menu on menu.product_id = sales.product_id
    order by (customer_id) ,order_date,sales.product_id desc
    ;

| customer_id | product_name | order_date               |
| ----------- | ------------ | ------------------------ |
| A           | curry        | 2021-01-01T00:00:00.000Z |
| B           | curry        | 2021-01-01T00:00:00.000Z |
| C           | ramen        | 2021-01-01T00:00:00.000Z |

---
**Query #4**

    select sales.product_id,count(sales.product_id)as maxi,product_name
    from dannys_diner.sales join dannys_diner.menu on sales.product_id = menu.product_id
    group by sales.product_id,menu.product_name
    order by maxi desc
    limit 1
    
    
    ;

| product_id | maxi | product_name |
| ---------- | ---- | ------------ |
| 3          | 8    | ramen        |

---
**Query #5**

    select distinct on  (customer_id)customer_id, product_name, count(sales.product_id)as maxi
    from dannys_diner.sales 
    join dannys_diner.menu on menu.product_id = sales.product_id
    group by (customer_id),sales.product_id,product_name
    order by (customer_id) ,maxi desc,sales.product_id  desc
    ;

| customer_id | product_name | maxi |
| ----------- | ------------ | ---- |
| A           | ramen        | 3    |
| B           | ramen        | 2    |
| C           | ramen        | 3    |

---
**Query #6**

    select distinct on  (members.customer_id)members.customer_id, product_name
    
    from dannys_diner.sales 
    join dannys_diner.members on  sales.customer_id = members.customer_id 
    join dannys_diner.menu on sales.product_id = menu.product_id 
    where members.join_date > sales.order_date
    order by  members.customer_id;

| customer_id | product_name |
| ----------- | ------------ |
| A           | sushi        |
| B           | sushi        |

---
**Query #7**

    select distinct on  (members.customer_id)members.customer_id, product_name
    from dannys_diner.sales 
    join dannys_diner.members on  sales.customer_id = members.customer_id 
    join dannys_diner.menu on sales.product_id = menu.product_id 
    where members.join_date < sales.order_date
    order by  members.customer_id, members.join_date desc;

| customer_id | product_name |
| ----------- | ------------ |
| A           | ramen        |
| B           | sushi        |

---
**Query #8**

    select   members.customer_id,sum(sales.product_id * price) 
    from dannys_diner.sales 
    right join dannys_diner.members on  sales.customer_id = members.customer_id 
    join dannys_diner.menu on sales.product_id = menu.product_id 
    where members.join_date < sales.order_date
    group by  members.customer_id
    order by  members.customer_id;

| customer_id | sum |
| ----------- | --- |
| A           | 108 |
| B           | 82  |

---
**Query #9**

    with pp as(
     select *, case
      when menu.product_name = 'sushi' then price *10 *2
      else price *10
      end as points
      from dannys_diner.sales join dannys_diner.menu using(product_id)
      
    )
    select customer_id,sum(pp.points) from pp 
    group by customer_id
    order by sum ;

| customer_id | sum |
| ----------- | --- |
| C           | 360 |
| A           | 860 |
| B           | 940 |

---


**Query #10**

    with pp as(
         select *, case
          when sales.order_date >= members.join_date and members.join_date < members.join_date + interval'7 days' then price *10 *2
          when menu.product_name = 'sushi' then price *10 *2
          else price *10
          end as points
          from dannys_diner.sales  join dannys_diner.members  using(customer_id) join dannys_diner.menu using(product_id)
          
        )
        select customer_id, sum(points)
        from pp
        group by customer_id
        order by customer_id
        ;

| customer_id | sum  |
| ----------- | ---- |
| A           | 1370 |
| B           | 1180 |

---